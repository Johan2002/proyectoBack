import { TDocumentDefinitions } from 'pdfmake/interfaces';
import { SaleView } from 'src/data/entities/view/sale-viwe-entity';
import { Formatter } from 'src/data/helpers/formatter.helper';
import { StyleInvoice } from 'src/data/constants/styley-invoice.contant';

export function billReport(saleData: SaleView): TDocumentDefinitions {
  const saleDetailRows = Array.isArray(saleData.sale_detail)
    ? saleData.sale_detail.map((detail) => ({
        productCode: detail.productCode,
        productName: detail.productName,
        unitPrice: detail.unitPrice,
        quantity: detail.quantity,
        subtotal: detail.subtotal,
        totalTaxes: detail.totalTaxes,
        total: detail.total,
      }))
    : [];

  console.log('productName :>> ', saleData.sale_detail);
  console.log('company :>> ', saleData.company);
  const facturaNumero = Math.floor(100000 + Math.random() * 900000);

  return {
    defaultStyle: {
      fontSize: 10,
    },
    pageSize: 'A4',
    header: {
      text: 'Factura de Venta',
      alignment: 'right',
      margin: [10, 10],
      fontSize: 14,
      bold: true,
      color: '#333333',
    },
    footer: {
      text: 'Generated by developDjosh',
      alignment: 'right',
      margin: [10, 10],
      fontSize: 8,
      color: '#777777',
    },
    content: [
      {
        canvas: [
          {
            type: 'line',
            x1: 0,
            y1: 5,
            x2: 515,
            y2: 5,
            lineWidth: 2,
          },
        ],
      },

      {
        text: `${saleData.company.companyName.toUpperCase()}`,
        style: 'h1',
        margin: [0, 5],
        alignment: 'center',
        fontSize: 16,
        bold: true,
        color: '#000000',
      },

      {
        columns: [
          {
            width: '*',
            text: [
              {
                text: `${saleData.company.companyAdress}\n`,
                style: 'h3',
                bold: true,
              },
              `Nit: ${saleData.company.companyNit}\n`,
              `TelÃ©fono: ${saleData.company.companyPhone}\n`,
            ],
          },
          {
            width: 'auto',
            text: [
              {
                text: `Factura: ${facturaNumero}\n`,
                style: 'h3',
                bold: true,
              },
              `Fecha: ${saleData.sale.saleDate}`,
            ],
            alignment: 'right',
          },
        ],
      },

      {
        text: [
          {
            text: `Facturado por:\n`,
            style: 'h2',
            bold: true,
          },
          `${saleData.employee.employeeName} ${saleData.employee.employeeLastname}\n${saleData.employee.employeeEmail}`,
        ],
        margin: [0, 10],
      },

      // Datos del cliente
      {
        text: [
          {
            text: 'Facturado a:\n',
            style: 'h2',
            bold: true,
          },
          `${saleData.customer.customerName} ${saleData.customer.customerLastname}\n${saleData.customer.customerEmail}\nCC: ${saleData.customer.customerIdentity}`,
        ],
        margin: [0, 10],
      },

      {
        canvas: [
          {
            type: 'line',
            x1: 0,
            y1: 5,
            x2: 515,
            y2: 5,
            lineWidth: 2,
          },
        ],
        margin: [0, 20],
      },

      // Tabla con los detalles de los productos
      {
        margin: [0, 20],
        layout: 'lightHorizontalLines',
        table: {
          widths: [50, 80, 'auto', 'auto', 'auto', 'auto', 'auto'],
          headerRows: 1,
          body: [
            // Encabezado
            [
              {
                text: 'ID',
                alignment: 'center',
                style: { fontSize: 10 },
                fillColor: '#DDEBF7',
                bold: true,
                margin: [0, 5],
              },
              {
                text: 'Producto',
                fillColor: '#DDEBF7',
                style: { fontSize: 10 },
                bold: true,
                margin: [0, 5],
              },
              {
                text: 'Precio',
                alignment: 'center',
                style: { fontSize: 10 },
                fillColor: '#DDEBF7',
                bold: true,
                margin: [0, 5],
              },
              {
                text: 'Cantidad',
                alignment: 'center',
                style: { fontSize: 10 },
                fillColor: '#DDEBF7',
                bold: true,
                margin: [0, 5],
              },
              {
                text: 'Subtotal',
                alignment: 'center',
                style: { fontSize: 10 },
                fillColor: '#DDEBF7',
                bold: true,
                margin: [0, 5],
              },
              {
                text: 'Impuestos',
                alignment: 'center',
                style: { fontSize: 10 },
                fillColor: '#DDEBF7',
                bold: true,
                margin: [0, 5],
              },
              {
                text: 'Total',
                alignment: 'center',
                style: { fontSize: 10 },
                fillColor: '#DDEBF7',
                bold: true,
                margin: [0, 5],
              },
            ],
            // Filas de productos
            ...saleDetailRows.map((product) => [
              {
                text: product.productCode,
                alignment: 'center',
                margin: [0, 5],
                style: { fontSize: 10 },
              },
              {
                text: product.productName,
                margin: [0, 5],
                style: { fontSize: 10 },
              },
              {
                text: Formatter.currency(product.unitPrice),
                alignment: 'right',
                style: { fontSize: 10 },
                margin: [0, 5],
              },
              {
                text: product.quantity,
                alignment: 'center',
                margin: [0, 5],
                style: { fontSize: 10 },
              },
              {
                text: Formatter.currency(product.subtotal),
                alignment: 'right',
                style: { fontSize: 10 },
                margin: [0, 5],
              },
              {
                text: Formatter.currency(product.totalTaxes),
                alignment: 'right',
                style: { fontSize: 10 },
                margin: [0, 5],
              },
              {
                text:
                  typeof product.total === 'number'
                    ? Formatter.currency(product.total)
                    : '',
                bold: true,
                alignment: 'right',
                style: { fontSize: 10 },
                margin: [0, 5],
              },
            ]),
            // Fila de subtotal
            [
              {},
              {},
              {},
              {},
              {
                text: 'Subtotal',
                colSpan: 2,
                alignment: 'right',
                bold: true,
                fillColor: '#E2F0D9',
                margin: [0, 5],
              },
              {},
              {
                text: Formatter.currency(saleData.sale.subtotal),
                bold: true,
                alignment: 'right',
                margin: [0, 5],
              },
            ],
            // Fila de impuestos
            [
              {},
              {},
              {},
              {},
              {
                text: 'Impuestos',
                colSpan: 2,
                alignment: 'right',
                bold: true,
                fillColor: '#E2F0D9',
                margin: [0, 5],
              },
              {},
              {
                text: Formatter.currency(saleData.sale.totalTaxes),
                bold: true,
                alignment: 'right',
                margin: [0, 5],
              },
            ],
            // Fila de total
            [
              {},
              {},
              {},
              {},
              {
                text: 'Total',
                colSpan: 2,
                alignment: 'right',
                fillColor: '#000000',
                color: '#FFFFFF',
                bold: true,
                margin: [5, 5],
                fontSize: 14,
                border: [true, true, true, true],
              },
              {},
              {
                text: Formatter.currency(saleData.sale.saleTotalPrice),
                bold: true,
                alignment: 'right',
                fillColor: '#000000',
                color: '#FFFFFF',
                margin: [5, 5],
                fontSize: 14,
                border: [true, true, true, true],
              },
            ],
          ],
        },
      },
    ],

    styles: StyleInvoice,
  };
}
